apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-to-postgres
  namespace: kafka-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-to-postgres
  template:
    metadata:
      labels:
        app: kafka-to-postgres
    spec:
      containers:
      - name: kafka-to-postgres
        image: bcperry/streamlit-kafka-app:latest
        imagePullPolicy: Always
        args: ["python", "kafka_to_postgres.py"]
        env:
        - name: KAFKA_BROKER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: KAFKA_BROKER
        - name: TOPIC
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: TOPIC
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_PORT
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: BATCH_SIZE
        - name: MAX_POLL_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MAX_POLL_INTERVAL
        - name: PYTHONUNBUFFERED
          value: "1"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "ps -ef | grep python | grep kafka_to_postgres"
          initialDelaySeconds: 30
          periodSeconds: 10
      restartPolicy: Always
